<?xml version="1.0"?>
<includes>
  <!-- Cover Mask -->
  <include name="MusicCoverMaskCD">
    <texture background="true" diffuse="thumbs/boxes/cdcover_mask.png">DefaultAudio.png</texture>
  </include>
  <include name="MusicCoverMaskReflectionCD">
    <texture background="true" flipy="true" diffuse="thumbs/boxes/cdcover_mask_reflect.png">DefaultAudio.png</texture>
  </include>
  <include name="MusicCoverMaskReflectionBlackCD">
    <texture flipy="true" diffuse="thumbs/boxes/cdcover_mask_reflect.png">common/black.png</texture>
  </include>
  <!-- CD Cover -->
  <include name="ShowcaseMusicCoverCD">
    <bordertexture>thumbs/boxes/cd_shadow_light.png</bordertexture>
    <texture>thumbs/boxes/cd_glass.png</texture>
    <visible>!Container.Content(genres)</visible>
  </include>
  <include name="MusicShowcaseThumbDimensions">
    <posx>18</posx>
    <posy>18</posy>
    <width>234</width>
    <height>234</height>
  </include>
  <include name="MusicShowcaseThumbReflectionDimensions">
    <posx>18</posx>
    <posy>252</posy>
    <width>234</width>
    <height>234</height>
  </include>
  <include name="EpisodeShowcaseThumbDimensions">
    <posx>-138</posx>
    <posy>93</posy>
    <width>234</width>
    <height>144</height>
  </include>
  <include name="EpisodeShowcaseThumbReflectionDimensions">
    <posx>-138</posx>
    <posy>238</posy>
    <width>234</width>
    <height>144</height>
  </include>
  <include name="MusicCoverMaskNormal">
    <texture background="true" diffuse="thumbs/cdcover_mask.png">DefaultAudio.png</texture>
  </include>
  <include name="MusicCoverMaskReflectionNormal">
    <texture background="true" flipy="true" diffuse="thumbs/cdcover_mask_reflect.png">DefaultAudio.png</texture>
  </include>
  <include name="MusicCoverNormal">
    <bordertexture border="-17">thumbs/cd_shadow_light.png</bordertexture>
    <texture>thumbs/cd_glass.png</texture>
  </include>
  <!-- Music CD -->
  <!-- Case Dimensions -->
  <include name="MusicShowcaseThumbDimensionsCD">
    <posx>18</posx>
    <posy>34</posy>
    <width>250</width>
    <height>228</height>
  </include>
  <!-- Cover Dimensions -->
  <include name="MusicShowcaseThumbDimensionsCDCover">
    <posx>55</posx>
    <posy>46</posy>
    <width>199</width>
    <height>199</height>
  </include>
  <include name="MusicShowcaseThumbReflectionDimensionsCDCover">
    <posx>55</posx>
    <posy>261</posy>
    <width>199</width>
    <height>199</height>
  </include>
  <include name="Showcase_List_Content">
    <viewtype label="Coverflow">list</viewtype>
    <include condition="Window.IsActive(videoplaylist) | Window.IsActive(videofiles) | Window.IsActive(videolibrary) | Window.IsActive(programs)">MovieShowcaseGroupVars</include>
    <include condition="Window.IsActive(musicplaylist) | Window.IsActive(musicfiles) | Window.IsActive(musiclibrary) | Window.IsActive(pictures) | Window.IsActive(scripts)">MusicShowcaseGroupVars</include>
    <onleft>57</onleft>
    <onright>57</onright>
    <onup>9000</onup>
    <ondown>68</ondown>
    <pagecontrol>68</pagecontrol>
    <orientation>horizontal</orientation>
    <scrolltime>250</scrolltime>
    <include>Animation_HideShowcase</include>
    <focusposition>3</focusposition>
    <preloaditems>2</preloaditems>
    <visible>Container.Content(movies) | Container.Content(albums) | Container.Content(artists)</visible>
    <itemlayout height="380" width="196" condition="Window.IsActive(videoplaylist) | Window.IsActive(videofiles) | [Window.IsActive(videolibrary) + !Container.Content(episodes) + ![Container.Content(movies) + Skin.HasSetting(showcasefanart)]] | Window.IsActive(programs)">
      <control type="largeimage">
        <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbMain</include>
        <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbMainDVD</include>
        <info>ListItem.Icon</info>
        <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
      </control>
      <include>genre_Showcase_21</include>
      <control type="largeimage">
        <description>Glass overlay</description>
        <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlay</include>
        <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayDVD</include>
        <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
      </control>
      <control type="image">
        <description>Black overlay</description>
        <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensions</include>
        <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensionsCDCover</include>
        <colordiffuse>4e000000</colordiffuse>
        <texture>-</texture>
        <aspectratio scalediffuse="false">scale</aspectratio>
        <animation effect="fade" end="100" time="200" condition="ControlGroup(7000).HasFocus">Conditional</animation>
        <animation effect="fade" start="0" end="0" time="0">WindowOpen</animation>
        <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
      </control>
      <control type="largeimage">
        <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
        <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
        <info>ListItem.Icon</info>
        <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
      </control>
      <control type="largeimage">
        <description>Glass overlay reflection</description>
        <include>MovieShowcaseThumbReflectionDVD</include>
        <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
      </control>
      <control type="image">
        <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
        <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
        <include>detailcolornofocus</include>
        <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(0).Overlay) + [[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
        <visible>StringCompare(ListItem(0).Overlay,OverlayWatched.png)</visible>
        <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(0).Overlay]</texture>
      </control>
      <include>genre_Showcase_ref_21</include>
    </itemlayout>
    <focusedlayout height="380" width="196" condition="Window.IsActive(videoplaylist) | Window.IsActive(videofiles) | [Window.IsActive(videolibrary) + !Container.Content(episodes) + ![Container.Content(movies) + Skin.HasSetting(showcasefanart)]] | Window.IsActive(programs)">
      <control type="image">
        <description>Glow</description>
        <visible>Control.HasFocus(57)</visible>
        <posx>-6</posx>
        <posy>43</posy>
        <width>300</width>
        <height>298</height>
        <texture>thumbs/showcase_glow2.png</texture>
        <animation type="Focus" reversible="false">
          <effect type="zoom" center="165,400" start="100" end="140" time="400" tween="back" easing="out" />
          <effect type="fade" start="0" end="100" time="1000" delay="500"/>
        </animation>
        <aspectratio>stretch</aspectratio>
        <visible>!Container.Content(genres)</visible>
        <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
      </control>
      <control type="group">
        <animation effect="zoom" start="100" end="120" center="135,205" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
        <animation effect="zoom" start="120" end="100" center="135,205" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">Unfocus</animation>
        <control type="largeimage">
          <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbMain</include>
          <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbMainDVD</include>
          <info>ListItem.Icon</info>
          <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
        </control>
        <include>genre_Showcase_20</include>
        <control type="image">
          <description>Glass overlay</description>
          <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlay</include>
          <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayDVD</include>
          <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
        </control>
        <control type="image">
          <description>Black overlay</description>
          <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensions</include>
          <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensionsCDCover</include>
          <colordiffuse>4e000000</colordiffuse>
          <texture>-</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <animation effect="fade" end="100" time="200" condition="ControlGroup(7000).HasFocus">Conditional</animation>
          <animation effect="fade" start="0" end="0" time="0">WindowOpen</animation>
          <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
        </control>
        <control type="largeimage">
          <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionMain</include>
          <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionMainDVD</include>
          <info>ListItem.Icon</info>
          <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
        </control>
        <control type="largeimage">
          <description>Glass overlay reflection</description>
          <include>MovieShowcaseThumbReflectionDVD</include>
          <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
        </control>
        <control type="image">
          <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
          <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
          <include>detailcolornofocus</include>
          <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(0).Overlay) + [[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(6000)</visible>
          <visible>StringCompare(ListItem(0).Overlay,OverlayWatched.png)</visible>
          <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(0).Overlay]</texture>
        </control>
        <include>genre_Showcase_ref_20</include>
      </control>
    </focusedlayout>
    <itemlayout height="350" width="250" condition="Window.IsActive(musicplaylist) | Window.IsActive(musicfiles) | Window.IsActive(musiclibrary) | Window.IsActive(pictures) | Window.IsActive(scripts)">
      <control type="group">
        <posy>8</posy>
       <control type="largeimage">
          <include>MusicShowcaseThumbMain</include>
          <info>ListItem.Icon</info>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <include>genre_Showcase_23</include>
        <control type="image">
          <description>Glass overlay</description>
          <include>MusicShowcaseGlassOverlay</include>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <control type="largeimage">
          <include>MusicShowcaseThumbReflection</include>
          <info>ListItem.Icon</info>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <control type="image">
          <description>Glass overlay reflection</description>
          <include>MusicShowcaseThumbReflectionCD</include>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
      </control>
    </itemlayout>
    <focusedlayout height="350" width="250" condition="Window.IsActive(musicplaylist) | Window.IsActive(musicfiles) | Window.IsActive(musiclibrary) | Window.IsActive(pictures) | Window.IsActive(scripts)">
      <control type="group">
        <posy>8</posy>
        <animation effect="zoom" start="100" end="120" center="135,230" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
        <animation effect="zoom" start="120" end="100" center="135,230" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] | [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)]]">Unfocus</animation>
        <control type="largeimage">
          <include>MusicShowcaseThumbMain</include>
          <info>ListItem.Icon</info>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <include>genre_Showcase_22</include>
        <control type="image">
          <description>Glass overlay</description>
          <include>MusicShowcaseGlassOverlay</include>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <control type="image">
          <description>Black overlay</description>
          <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensions</include>
          <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensionsCDCover</include>
          <colordiffuse>4e000000</colordiffuse>
          <texture>-</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>![Control.HasFocus(57) | Control.HasFocus(71) | Control.HasFocus(85)]</visible>
          <include>Animation_CommonFade</include>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <control type="largeimage">
          <include>MusicShowcaseThumbReflection</include>
          <info>ListItem.Icon</info>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <control type="image">
          <description>Glass overlay reflection</description>
          <include>MusicShowcaseThumbReflectionCD</include>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
      </control>
    </focusedlayout>
    <itemlayout height="350" width="250" condition="[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(showcasefanart) + Container.Content(movies)]">
      <control type="image">
        <include>EpisodeShowcaseThumbDimensions</include>
        <texture background="true" diffuse="thumbs/multiplex_tvmask.png">$INFO[ListItem.Icon]</texture>
        <aspectratio scalediffuse="false">scale</aspectratio>
        <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
        <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)]] + !Control.IsVisible(970)</visible>   
     </control>
      <control type="image">
        <include>EpisodeShowcaseThumbDimensions</include>
        <texture background="true" diffuse="thumbs/multiplex_tvmask.png">$INFO[ListItem.property(fanart_image)]</texture>
        <aspectratio scalediffuse="false">scale</aspectratio>
        <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
        <visible>[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)]</visible>
      </control>
      <control type="image">
        <posx>-147</posx>
        <posy>86</posy>
        <width>252</width>
        <height>159</height>
        <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
        <texture>thumbs/episode_poster_shadow.png</texture>
      </control>
      <control type="image">
        <include>EpisodeShowcaseThumbReflection</include>
        <info>ListItem.Icon</info>
        <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)]] + !Control.IsVisible(970)</visible>
      </control>
      <control type="image">
        <description>Glass overlay reflection</description>
        <include>MusicShowcaseThumbReflectionCD</include>
        <visible>[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)]] + !Control.IsVisible(970)</visible>
      </control>
    </itemlayout>
    <focusedlayout height="350" width="250" condition="[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(showcasefanart) + Container.Content(movies)]">
      <control type="group">
        <animation effect="zoom" start="100" end="140" center="-15,180" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
        <animation effect="zoom" start="140" end="100" center="-15,180" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(57) + [[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] | [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)]]">Unfocus</animation>
        <control type="image">
          <include>EpisodeShowcaseThumbDimensions</include>
          <texture background="true" diffuse="thumbs/multiplex_tvmask.png">$INFO[ListItem.Icon]</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
          <visible>[[[[Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <control type="image">
          <include>EpisodeShowcaseThumbDimensions</include>
          <texture background="true" diffuse="thumbs/multiplex_tvmask.png">$INFO[ListItem.property(fanart_image)]</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
          <info>ListItem.property(fanart_image)</info>
          <visible>[Skin.HasSetting(flattenshowcasemovies) + Container.Content(movies)]</visible>
        </control>
        <control type="image">
          <posx>-147</posx>
          <posy>86</posy>
          <width>252</width>
          <height>159</height>
          <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
          <texture>thumbs/episode_poster_shadow.png</texture>
        </control>
        <control type="image">
          <description>Black overlay</description>
          <include>MusicShowcaseThumbDimensions</include>
          <colordiffuse>4e000000</colordiffuse>
          <texture>-</texture>
          <aspectratio scalediffuse="false">scale</aspectratio>
          <visible>![Control.HasFocus(57) | Control.HasFocus(71) | Control.HasFocus(85)]</visible>
          <include>Animation_CommonFade</include>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <control type="image">
          <include>EpisodeShowcaseThumbReflection</include>
          <info>ListItem.Icon</info>
          <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
        </control>
        <control type="image">
	  <description>Glass overlay reflection</description>
	  <include>MusicShowcaseThumbReflectionCD</include>
	  <visible>[[[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]] + !Control.IsVisible(970)]]</visible>
	</control>
      </control>
    </focusedlayout>
  </include>
  <include name="ShowcaseFixedList">
    <control type="fixedlist" id="57">
      <include>Showcase_List_Content</include>
    </control>
  </include>
  <include name="ShowcaseWrapList">
    <control type="wraplist" id="57">
      <include>Showcase_List_Content</include>
    </control>
  </include>
  <include name="WatchedOverlayShowCaseDVD">
    <posx>163</posx>
    <posy>28</posy>
    <width>60</width>
    <height>60</height>
  </include>
  <include name="WatchedOverlayShowCaseNormal">
    <posx>161</posx>
    <posy>9</posy>
    <width>60</width>
    <height>60</height>
  </include>
  <include name="ShowcaseInfoPaneMovies">
    <control type="image"><!-- black overlay-->
      <include>BlackOverlayCommon</include>
      <animation effect="fade" start="0" end="100" time="600" delay="3000" condition="!Skin.HasSetting(infopanel_on_movies)">WindowOpen</animation>
      <visible>!StringCompare(ListItem.Label,..) + Container.Content(movies) + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(109) | Control.HasFocus(70110) | Skin.HasSetting(infopanel_on_movies) | [Control.IsVisible(7777) + [Skin.HasSetting(infopanel_trigger_movies) | Skin.HasSetting(infopanel_auto_movies)]]]</visible>
    </control>
    <control type="group"><!-- info pane -->
      <posx>0</posx>
      <posy>30</posy>
      <animation type="Conditional" condition="Player.HasVideo" reversible="false">
        <effect type="rotatey" center="640" start="0" end="-90" time="550" tween="cubic" easing="in"/>
        <effect type="rotatey" center="640" start="-90" end="90" time="0" delay="550"/>
        <effect type="fade" start="100" end="0" time="0" delay="550"/>
        <effect type="rotatey" center="640" start="90" end="0" time="550" delay="550" tween="cubic" easing="out"/>
        <effect type="zoom" start="100" end="70" center="auto" easing="in" tween="back" time="450"/>
      </animation>
      <animation type="Conditional" condition="!Player.HasVideo" reversible="false">
        <effect type="rotatey" center="640" start="0" end="90" time="550" tween="cubic" easing="in"/>
        <effect type="rotatey" center="640" start="90" end="-90" time="0" delay="550"/>
        <effect type="fade" start="0" end="100" time="0" delay="550"/>
        <effect type="rotatey" center="640" start="-90" end="0" time="550" delay="550" tween="cubic" easing="out"/>
        <effect type="slide" start="0,-60" end="0,0"  time="550" easing="in" tween="cubic" delay="550"/>
        <effect type="zoom" start="70" end="100" center="auto" easing="in" tween="back" time="450" delay="550"/>
      </animation>
      <animation effect="slide" end="0,-160"  time="550" easing="out" tween="cubic" condition="Player.HasVideo">Conditional</animation>
      <animation effect="fade" start="0" end="100" time="400" delay="3000" condition="!Skin.HasSetting(infopanel_on_movies)">WindowOpen</animation>
      <animation effect="fade" end="0" time="200">WindowClose</animation>
      <include>Animation_InfoPanelSlide</include>
      <width>1280</width>
      <height>500</height>
      <visible>Container.Content(movies) + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(109) | Control.HasFocus(70110) | Skin.HasSetting(infopanel_on_movies) | [Control.IsVisible(7777) + [Skin.HasSetting(infopanel_trigger_movies) | Skin.HasSetting(infopanel_auto_movies)]]] + !StringCompare(ListItem.Label,..)</visible>
      <control type="image">
        <posx>75</posx>
        <width>1130</width>
        <height>590</height>
        <texture border="0,0,0,204">multiplex/multiplex_back.png</texture>
        <visible>!Skin.HasSetting(showcasethin) + !Skin.HasSetting(extrathumbslayout)</visible>
        <include>Animation_CommonFade</include>
      </control>
      <control type="image">
        <posx>75</posx>
        <width>1130</width>
        <height>590</height>
        <texture border="0,0,0,204">multiplex/multiplex_tablet.png</texture>
        <visible>Skin.HasSetting(plotlayout) | Skin.HasSetting(posterlayout) | Skin.HasSetting(extrathumbslayout)</visible>
      </control>
      <control type="image">
        <posx>75</posx>
        <width>1130</width>
        <height>590</height>
        <texture border="0,0,0,204">multiplex/multiplex_tablet_bigthumb.png</texture>
        <visible>Skin.HasSetting(fanartlayout)</visible>
      </control>
      <include>InfoPaneContent</include>
    </control>
		<control type="group"><!-- trailer pane -->
			<posx>0</posx>
			<posy>16</posy>
      <width>1280</width>
      <height>500</height>
      <visible>Container.Content(movies) + Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(109) | Control.HasFocus(70110) | Skin.HasSetting(infopanel_on_movies) | [Control.IsVisible(7777) + [Skin.HasSetting(infopanel_trigger_movies) | Skin.HasSetting(infopanel_auto_movies)]]]</visible>
      <animation effect="fade" start="0" end="100" time="400" delay="3000" condition="!Skin.HasSetting(infopanel_on_movies)">WindowOpen</animation>
      <animation effect="fade" end="0" time="200">WindowClose</animation>
      <include>Animation_InfoPanelSlide</include>
      <animation type="Conditional" condition="Player.HasVideo" reversible="false">
        <effect type="rotatey" center="640" start="0" end="-90" time="550" tween="cubic" easing="in"/>
        <effect type="rotatey" center="640" start="-90" end="90" time="0" delay="550"/>
        <effect type="fade" start="0" end="100" time="0" delay="550"/>
        <effect type="rotatey" center="640" start="90" end="0" time="550" delay="550" tween="cubic" easing="out"/>
        <effect type="slide" start="0,0" end="0,-60"  delay="550" time="0"/>
        <effect type="zoom" start="75" end="75" center="auto" easing="in" tween="back" time="550" delay="550"/>
      </animation>
      <animation type="Conditional" condition="!Player.HasVideo" reversible="false">
        <effect type="rotatey" center="640" start="0" end="90" time="550" tween="cubic" easing="in"/>
        <effect type="rotatey" center="640" start="90" end="-90" time="0" delay="550"/>
        <effect type="fade" start="100" end="0" time="0" delay="550"/>
        <effect type="rotatey" center="640" start="-90" end="0" time="550" delay="550" tween="cubic" easing="out"/>
        <effect type="slide" start="0,-60" end="0,-60"  time="0" easing="in" tween="cubic"/>
        <effect type="zoom" start="75" end="75" center="auto" time="0"/>
      </animation>
      <control type="image">
        <posx>75</posx>
        <width>1130</width>
        <height>600</height>
        <texture border="0,0,0,0">list/listpanel_back.png</texture>
      </control>     
			<control type="videowindow" id="2">
				<posx>160</posx>
				<posy>40</posy>
				<width>960</width>
				<height>400</height>
				<animation effect="fade" start="0" end="100" time="0" delay="1100">Visible</animation>
				<visible>Container.Content(movies) + Player.HasVideo</visible>
			</control>
		</control>
  </include>
  <include name="ShowcaseInfoPaneTV">
    <control type="image"><!-- black overlay-->
      <include>BlackOverlayCommon</include>
      <animation effect="fade" start="0" end="100" time="600" delay="3000" condition="![
        [!Skin.HasSetting(infopanel_on_tvshows) + Container.Content(tvshows)] |
        [!Skin.HasSetting(infopanel_on_episodes) + Container.Content(episodes)] |
        [!Skin.HasSetting(infopanel_on_seasons) + Container.Content(seasons)]]">WindowOpen</animation>
        <visible>
        !Container.Content(genres) +
        Skin.HasSetting(videotv) + Control.IsVisible(57) + !Control.HasFocus(70197) +
        [Control.IsVisible(109) | Control.HasFocus(70110) |
          [
            [Skin.HasSetting(infopanel_on_tvshows) + Container.Content(tvshows)] |
            [Skin.HasSetting(infopanel_on_episodes) + Container.Content(episodes)] |
            [Skin.HasSetting(infopanel_on_seasons) + Container.Content(seasons)]
          ] |
          [
            Control.IsVisible(7777) +
            [
              [Skin.HasSetting(infopanel_trigger_tvshows) + Container.Content(tvshows)] |
              [Skin.HasSetting(infopanel_trigger_episodes) + Container.Content(episodes)] |
              [Skin.HasSetting(infopanel_trigger_seasons) + Container.Content(seasons)] |
              [Skin.HasSetting(infopanel_auto_tvshows) + Container.Content(tvshows)] |
              [Skin.HasSetting(infopanel_auto_episodes) + Container.Content(episodes)] |
              [Skin.HasSetting(infopanel_auto_seasons) + Container.Content(seasons)]
            ]
          ]
        ]</visible>
    </control>
    <control type="group">
      <posx>0</posx>
      <posy>65</posy>
      <width>1280</width>
      <height>381</height>
      <visible>
        !Container.Content(genres) +
        Skin.HasSetting(videotv) + Control.IsVisible(57) + !Control.HasFocus(70197) +
        [Control.IsVisible(109) | Control.HasFocus(70110) |
          [
            [Skin.HasSetting(infopanel_on_tvshows) + Container.Content(tvshows)] |
            [Skin.HasSetting(infopanel_on_episodes) + Container.Content(episodes)] |
            [Skin.HasSetting(infopanel_on_seasons) + Container.Content(seasons)]
          ] |
          [
            Control.IsVisible(7777) +
            [
              [Skin.HasSetting(infopanel_trigger_tvshows) + Container.Content(tvshows)] |
              [Skin.HasSetting(infopanel_trigger_episodes) + Container.Content(episodes)] |
              [Skin.HasSetting(infopanel_trigger_seasons) + Container.Content(seasons)] |
              [Skin.HasSetting(infopanel_auto_tvshows) + Container.Content(tvshows)] |
              [Skin.HasSetting(infopanel_auto_episodes) + Container.Content(episodes)] |
              [Skin.HasSetting(infopanel_auto_seasons) + Container.Content(seasons)]
            ]
          ]
        ]</visible>
      <animation effect="fade" start="0" end="100" time="400" delay="3000" condition="![
        [Skin.HasSetting(infopanel_on_tvshows) + Container.Content(tvshows)] |
        [Skin.HasSetting(infopanel_on_episodes) + Container.Content(episodes)] |
        [Skin.HasSetting(infopanel_on_seasons) + Container.Content(seasons)]]">WindowOpen</animation>
      <animation effect="fade" end="0" time="200">WindowClose</animation>
      <include>Animation_InfoPanelSlide</include>
      <control type="image">
        <posx>75</posx>
        <width>1130</width>
        <height>590</height>
        <texture border="0,0,0,204">multiplex/multiplex_back.png</texture>
        <visible>!Skin.HasSetting(showcasethin)</visible>
        <include>Animation_CommonFade</include>
      </control>
      <control type="image">
        <posx>75</posx>
        <width>1130</width>
        <height>590</height>
        <texture border="0,0,0,204">multiplex/multiplex_tvposter_tablet.png</texture>
      </control>
      <include>InfoPaneContentTV</include>
    </control>
  </include>
  <include name="ShowcaseInfoPaneMusic">
    <control type="group">
      <posx>0</posx>
      <posy>26</posy>
      <width>1280</width>
      <height>381</height>
      <visible>Control.IsVisible(57) + !Control.HasFocus(70197) + [Control.IsVisible(109) | Control.HasFocus(70110) | Skin.HasSetting(infopanel_on_music) | [Control.IsVisible(7777) + [Skin.HasSetting(infopanel_trigger_music) | Skin.HasSetting(infopanel_auto_music)]]] + [!Container.Content(genres) + Window.IsActive(musiclibrary) ]</visible>
      <animation effect="fade" start="0" end="100" time="400" delay="3000" condition="!Skin.HasSetting(infopanel_on_music)">WindowOpen</animation>
      <animation effect="fade" end="0" time="200">WindowClose</animation>
      <include>Animation_InfoPanelSlide</include>
      <control type="image">
        <posx>75</posx>
        <width>1130</width>
        <height>590</height>
        <texture border="0,0,0,204">multiplex/multiplex_back.png</texture>
        <visible>!Skin.HasSetting(showcasethin)</visible>
        <include>Animation_CommonFade</include>
      </control>
      <control type="image">
        <posx>75</posx>
        <width>1130</width>
        <height>590</height>
	<texture border="0,0,0,204">multiplex/multiplex_tvposter_tablet.png</texture>
      </control>
      <include>InfoPaneContentMusic</include>
    </control>
  </include>
  <include name="MovieShowcaseGroupVars">
    <posx>-83</posx>
    <posy>450</posy>
    <width>1446</width>
    <height>350</height>
  </include>
  <include name="MusicShowcaseGroupVars">
    <posx>-245</posx>
    <posy>387</posy>
    <width>1770</width>
    <height>350</height>
  </include>
  <!-- Movie Showcase Variables: Main thumbs -->
  <include name="MovieShowcaseThumb">
    <posx>49</posx>
    <posy>8</posy>
    <width>173</width>
    <height>254</height>
    <align>center</align>
    <texture background="true" diffuse="thumbs/cdcover_mask.png">DefaultVideo.png</texture>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>!Container.Content(genres)</visible>
  </include>
  <include name="MovieShowcaseThumbDVD">
    <posx>76</posx>
    <posy>29</posy>
    <width>146</width>
    <height>220</height>
    <align>center</align>
    <texture background="true" diffuse="thumbs/boxes/cdcover_mask.png">DefaultVideo.png</texture>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>!Container.Content(genres)</visible>
  </include>
  <include name="MovieShowcaseThumbMain">
    <posx>49</posx>
    <posy>8</posy>
    <width>173</width>
    <height>254</height>
    <align>center</align>
    <texture background="true" diffuse="thumbs/cdcover_mask.png">DefaultVideo.png</texture>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>!Container.Content(genres)</visible>
  </include>
  <include name="MovieShowcaseThumbMainDVD">
    <posx>76</posx>
    <posy>29</posy>
    <width>146</width>
    <height>220</height>
    <align>center</align>
    <texture background="true" diffuse="thumbs/boxes/cdcover_mask.png">DefaultVideo.png</texture>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>!Container.Content(genres)</visible>
  </include>
  <include name="MovieShowcaseThumbReflectionMain">
    <posx>49</posx>
    <posy>460</posy>
    <width>173</width>
    <height>254</height>
    <colordiffuse>52FFFFFF</colordiffuse>
    <texture background="true" flipy="true" diffuse="thumbs/cdcover_mask_reflect.png">DefaultVideo.png</texture>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>!Container.Content(genres)</visible>
  </include>
  <include name="MovieShowcaseThumbReflectionMainDVD">
    <posx>76</posx>
    <posy>261</posy>
    <width>146</width>
    <height>220</height>
    <colordiffuse>52FFFFFF</colordiffuse>
    <texture background="true" flipy="true" diffuse="thumbs/boxes/cdcover_mask_reflect.png">DefaultVideo.png</texture>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <visible>!Container.Content(genres)</visible>
  </include>
  <include name="MovieShowcaseThumbReflection">
    <posx>49</posx>
    <posy>260</posy>
    <width>173</width>
    <height>254</height>
    <colordiffuse>whiteD0</colordiffuse>
    <texture background="true" flipy="true" diffuse="thumbs/cdcover_mask_reflect.png">DefaultVideo.png</texture>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <animation effect="fade" start="70" end="70" time="0" condition="true">Conditional</animation>
    <visible>!Container.Content(genres)</visible>
  </include>
  <include name="MovieShowcaseThumbReflectionDVDCover">
    <posx>76</posx>
    <posy>261</posy>
    <width>146</width>
    <height>220</height>
    <colordiffuse>whiteD0</colordiffuse>
    <texture background="true" flipy="true" diffuse="thumbs/boxes/cdcover_mask_reflect.png">DefaultVideo.png</texture>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <animation effect="fade" start="70" end="70" time="0" condition="true">Conditional</animation>
    <visible>!Container.Content(genres)</visible>
  </include>
  <include name="MovieShowcaseThumbReflectionDVD">
    <posx>49</posx>
    <posy>250</posy>
    <width>184</width>
    <height>120</height>
    <colordiffuse>whiteD0</colordiffuse>
    <bordertexture>thumbs/boxes/poster_shadow_reflect.png</bordertexture>
    <texture>thumbs/boxes/poster_glass_reflect.png</texture>
    <aspectratio scalediffuse="false">stretch</aspectratio>
    <animation effect="fade" start="70" end="70" time="0" condition="true">Conditional</animation>
    <visible>Skin.HasSetting(dvdcase_showcase)</visible>
  </include>
  <!-- Movie Showcase Variables: Thumb glass overlays -->
  <include name="MovieShowcaseGlassOverlay">
    <posx>49</posx>
    <posy>9</posy>
    <width>173</width>
    <height>254</height>
    <bordertexture border="-17">thumbs/poster_shadow.png</bordertexture>
    <texture>thumbs/poster_glass.png</texture>
  </include>
  <include name="MovieShowcaseGlassOverlayDVD">
    <posx>49</posx>
    <posy>22</posy>
    <width>184</width>
    <height>240</height>
    <bordertexture>thumbs/boxes/poster_shadow.png</bordertexture>
    <texture>thumbs/boxes/poster_glass.png</texture>
  </include>
  <include name="MovieShowcaseGlassOverlayAngled">
    <posx>49</posx>
    <posy>8</posy>
    <width>173</width>
    <height>254</height>
    <bordertexture border="-17">thumbs/poster_shadow.png</bordertexture>
    <texture>thumbs/poster_glass.png</texture>
  </include>
  <include name="MovieShowcaseGlassOverlayAngledDVD">
    <posx>49</posx>
    <posy>22</posy>
    <width>184</width>
    <height>240</height>
    <bordertexture>thumbs/boxes/poster_shadow.png</bordertexture>
    <texture>thumbs/boxes/poster_glass.png</texture>
  </include>
  <!-- Music Showcase Variables: Main thumbs -->
  <include name="MusicShowcaseThumbAspectRatio">
    <aspectratio scalediffuse="false">scale</aspectratio>
  </include>
  <include name="MusicShowcaseThumb">
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensionsCDCover</include>
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicCoverMaskNormal</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">MusicCoverMaskCD</include>
    <include>MusicShowcaseThumbAspectRatio</include>
    <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
  </include>
  <include name="MusicShowcaseBlack">
    <control type="image">
      <visible>!Skin.HasSetting(dvdcase_showcase)</visible>
      <include>MusicShowcaseThumbDimensions</include>
      <texture diffuse="thumbs/cdcover_mask.png">common/black.png</texture>
    </control>
    <control type="image">
      <visible>Skin.HasSetting(dvdcase_showcase)</visible>
      <include>MusicShowcaseThumbDimensionsCDCover</include>
      <texture diffuse="thumbs/boxes/cdcover_mask.png">common/black.png</texture>
    </control>
  </include>
  <include name="MusicShowcaseBlackReflection">
    <control type="image">
      <include>MusicShowcaseThumbDimensions</include>
      <colordiffuse>whiteD0</colordiffuse>
      <texture flipy="true" diffuse="thumbs/cdcover_mask_reflect.png">common/black.png</texture>
      <animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
    </control>
  </include>
  <include name="MusicShowcaseThumbMain">
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensionsCDCover</include>
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicCoverMaskNormal</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">MusicCoverMaskCD</include>
    <include>MusicShowcaseThumbAspectRatio</include>
    <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
  </include>
  <include name="MusicShowcaseThumbReflection">
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbReflectionDimensions</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbReflectionDimensionsCDCover</include>
    <colordiffuse>whiteD0</colordiffuse>
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicCoverMaskReflectionNormal</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">MusicCoverMaskReflectionCD</include>
    <include>MusicShowcaseThumbAspectRatio</include>
    <animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
    <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
  </include>
  <include name="EpisodeShowcaseThumbReflection">
    <include>EpisodeShowcaseThumbReflectionDimensions</include>
    <colordiffuse>whiteD0</colordiffuse>
    <texture background="true" flipy="true" diffuse="thumbs/cdcover_mask_reflect.png">DefaultVideo.png</texture>
    <aspectratio scalediffuse="false">scale</aspectratio>
    <animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
    <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
  </include>
  <include name="MusicShowcaseThumbReflectionMain">
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbReflectionDimensions</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbReflectionDimensionsCDCover</include>
    <colordiffuse>52FFFFFF</colordiffuse>
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicCoverMaskReflectionNormal</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">MusicCoverMaskReflectionCD</include>
    <include>MusicShowcaseThumbAspectRatio</include>
    <animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
    <visible>!Container.Content(genres) | Skin.HasSetting(MusicGenreOff)</visible>
  </include>
  <include name="MusicShowcaseThumbReflectionCD">
    <posx>18</posx>
    <posy>244</posy>
    <width>250</width>
    <height>228</height>
    <colordiffuse>whiteD0</colordiffuse>
    <bordertexture>thumbs/boxes/cd_shadow_reflect.png</bordertexture>
    <texture>thumbs/boxes/cd_glass_reflect.png</texture>
    <include>MusicShowcaseThumbAspectRatio</include>
    <animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
    <visible>Skin.HasSetting(dvdcase_showcase) + !Container.Content(genres)</visible>
  </include>
  <include name="MusicShowcaseThumbReflectionCDMain">
    <posx>18</posx>
    <posy>244</posy>
    <width>250</width>
    <height>228</height>
    <colordiffuse>52FFFFFF</colordiffuse>
    <bordertexture>thumbs/boxes/cd_shadow_reflect.png</bordertexture>
    <texture>thumbs/boxes/cd_glass_reflect.png</texture>
    <include>MusicShowcaseThumbAspectRatio</include>
    <animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
    <visible>Skin.HasSetting(dvdcase_showcase) + !Container.Content(genres)</visible>
  </include>
  <!-- Music Showcase Variables: Thumb glass overlays -->
  <include name="MusicShowcaseGlassOverlayAngled">
    <include>MusicShowcaseThumbDimensions</include>
    <bordertexture border="-17">thumbs/cd_shadow_light.png</bordertexture>
    <texture>thumbs/cd_glass_noedge.png</texture>
  </include>
  <include name="MusicShowcaseGlassOverlayAngledCD">
    <include>MusicShowcaseThumbDimensionsCD</include>
    <include>ShowcaseMusicCoverCD</include>
  </include>
  <include name="MusicShowcaseGlassOverlay">
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensions</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseThumbDimensionsCD</include>
    <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicCoverNormal</include>
    <include condition="Skin.HasSetting(dvdcase_showcase)">ShowcaseMusicCoverCD</include>
  </include>
  <include name="ShowcaseSquare">
    <control type="group">
      <posy>460</posy>
      <camera x="640" y="590"/>
      <visible>![[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]</visible>
      <control type="group" id="7001">
        <visible>Container.OnNext + ![[Skin.HasSetting(flattenshowcaseepisodes) + Container.Content(episodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]</visible>
        <animation effect="slide" end="-100,0" time="250" reversible="false">Hidden</animation>
        <control type="group">
          <posx>50</posx>
          <visible>Container.OnNext</visible>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-6).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
          <animation effect="rotatey" center="-50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="largeimage">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-6).Thumb</info>
            </control>
            <include>genre_Showcase_1</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-6).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_1</include>
          </control>
        </control>
        <control type="group">
          <posx>150</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <include>genre_Showcase_2</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_2</include>
          </control>
        </control>
        <control type="group">
          <posx>250</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="150" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <include>genre_Showcase_3</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_3</include>
          </control>
        </control>
        <control type="group">
          <posx>350</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="250" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <include>genre_Showcase_4</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_4</include>
          </control>
        </control>
        <control type="group">
          <posx>450</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="350" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <include>genre_Showcase_5</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_5</include>
          </control>
        </control>
        <control type="group">
          <posx>1060</posx>
          <visible>!Container.OnNext</visible>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="fade" start="0" end="100" delay="0" time="250" reversible="false">Visible</animation>
          <animation effect="rotatey" center="1430" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <include>genre_Showcase_12</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_12</include>
          </control>
        </control>
        <control type="group">
          <posx>960</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1330" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <include>genre_Showcase_11</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_11</include>
          </control>
        </control>
        <control type="group">
          <posx>860</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1230" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <include>genre_Showcase_10</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_10</include>
          </control>
        </control>
        <control type="group">
          <posx>760</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1130" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <include>genre_Showcase_9</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_9</include>
          </control>
        </control>
        <control type="group">
          <posx>660</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1030" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <include>genre_Showcase_8</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_8</include>
          </control>
        </control>
        <control type="group">
          <visible>Container.OnNext</visible>
          <animation effect="slide" end="45,0" time="250" reversible="false">Hidden</animation>
          <control type="group">
            <posx>560</posx>
            <visible>Container.OnNext</visible>
            <visible>!IsEmpty(Container(57).ListItemNoWrap(0).label) | !Skin.HasSetting(showcasefixedlist)</visible>
            <animation effect="rotatey" center="930" start="0" end="-65" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
            <animation effect="rotatey" center="930" start="65" end="65" time="0" condition="true">Conditional</animation>
            <control type="group">
              <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
              <control type="image">
                <include>MusicShowcaseThumb</include>
                <info>Container(57).ListItem(0).Thumb</info>
              </control>
              <include>genre_Showcase_7</include>
              <control type="image">
                <description>Glass overlay</description>
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
              </control>
              <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
              <control type="image">
                <include>MusicShowcaseThumbReflection</include>
                <info>Container(57).ListItem(0).Thumb</info>
              </control>
              <control type="image">
                <description>Glass overlay reflection</description>
                <include>MusicShowcaseThumbReflectionCD</include>
              </control>
              <include>genre_Showcase_ref_7</include>
            </control>
          </control>
          <control type="group">
            <posx>505</posx>
            <visible>Container.OnNext</visible>
            <visible>!IsEmpty(Container(57).ListItemNoWrap(-1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
            <animation effect="rotatey" center="405" start="0" end="-65" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
            <control type="group">
              <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
              <control type="image">
                <include>MusicShowcaseThumb</include>
                <info>Container(57).ListItem(-1).Thumb</info>
              </control>
              <include>genre_Showcase_6</include>
              <control type="image">
                <description>Glass overlay</description>
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
              </control>
              <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
              <control type="image">
                <include>MusicShowcaseThumbReflection</include>
                <info>Container(57).ListItem(-1).Thumb</info>
              </control>
              <control type="image">
                <description>Glass overlay reflection</description>
                <include>MusicShowcaseThumbReflectionCD</include>
              </control>
              <include>genre_Showcase_ref_6</include>
            </control>
          </control>
        </control>
      </control>
      <control type="group" id="7002">
        <visible>Container.OnPrevious</visible>
        <animation effect="slide" end="100,0" time="250" reversible="false">Hidden</animation>
        <control type="group">
          <posx>960</posx>
          <visible>Container.OnPrevious</visible>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(6).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
          <animation effect="rotatey" center="1330" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(6).Thumb</info>
            </control>
            <include>genre_Showcase_13</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(6).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_13</include>
          </control>
        </control>
        <control type="group">
          <posx>860</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1230" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <include>genre_Showcase_12</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_12</include>
          </control>
        </control>
        <control type="group">
          <posx>760</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1130" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <include>genre_Showcase_11</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_11</include>
          </control>
        </control>
        <control type="group">
          <posx>660</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1030" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <include>genre_Showcase_10</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_10</include>
          </control>
        </control>
        <control type="group">
          <posx>560</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="930" start="65" end="65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <include>genre_Showcase_9</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_9</include>
          </control>
        </control>
        <control type="group">
          <posx>-50</posx>
          <visible>!Container.OnPrevious</visible>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="fade" start="0" end="100" time="250" reversible="false">Visible</animation>
          <animation effect="rotatey" center="-150" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <include>genre_Showcase_2</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <include>genre_Showcase_ref_2</include>
          </control>
        </control>
        <control type="group">
          <posx>50</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="-50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <include>genre_Showcase_3</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <include>genre_Showcase_ref_3</include>
          </control>
        </control>
        <control type="group">
          <posx>150</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <include>genre_Showcase_4</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_4</include>
          </control>
        </control>
        <control type="group">
          <posx>250</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="150" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <include>genre_Showcase_5</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_5</include>
          </control>
        </control>
        <control type="group">
          <posx>350</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="250" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <include>genre_Showcase_6</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_6</include>
          </control>
        </control>
        <control type="group">
          <visible>Container.OnPrevious</visible>
          <animation effect="slide" end="-45,0" time="250" reversible="false">Hidden</animation>
          <control type="group">
            <posx>450</posx>
            <visible>Container.OnPrevious</visible>
            <visible>!IsEmpty(Container(57).ListItemNoWrap(0).label) | !Skin.HasSetting(showcasefixedlist)</visible>
            <animation effect="rotatey" center="350" start="0" end="65" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
            <animation effect="rotatey" center="350" start="-65" end="-65" time="0" condition="true">Conditional</animation>
            <control type="group">
              <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
              <control type="image">
                <include>MusicShowcaseThumb</include>
                <info>Container(57).ListItem(0).Thumb</info>
              </control>
              <include>genre_Showcase_7</include>
              <control type="image">
                <description>Glass overlay</description>
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
              </control>
              <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
              <control type="image">
                <include>MusicShowcaseThumbReflection</include>
                <info>Container(57).ListItem(0).Thumb</info>
              </control>
              <control type="image">
                <description>Glass overlay reflection</description>
                <include>MusicShowcaseThumbReflectionCD</include>
              </control>
              <include>genre_Showcase_ref_7</include>
            </control>
          </control>
          <control type="group">
            <posx>505</posx>
            <visible>Container.OnPrevious</visible>
            <visible>!IsEmpty(Container(57).ListItemNoWrap(1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
            <animation effect="rotatey" center="875" start="0" end="65" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
            <control type="group">
              <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
              <control type="image">
                <include>MusicShowcaseThumb</include>
                <info>Container(57).ListItem(1).Thumb</info>
              </control>
              <include>genre_Showcase_8</include>
              <control type="image">
                <description>Glass overlay</description>
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
              </control>
              <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
              <control type="image">
                <include>MusicShowcaseThumbReflection</include>
                <info>Container(57).ListItem(1).Thumb</info>
              </control>
              <control type="image">
                <description>Glass overlay reflection</description>
                <include>MusicShowcaseThumbReflectionCD</include>
              </control>
              <include>genre_Showcase_ref_8</include>
            </control>
          </control>
        </control>
      </control>
      <control type="group" id="6500">
        <animation effect="fade" time="500">WindowOpen</animation>
        <animation effect="fade" time="200">WindowClose</animation>
        <visible>!Control.IsVisible(7001) + !Control.IsVisible(7002) + Control.IsVisible(970)</visible>
        <control type="group">
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <posx>50</posx>
          <animation effect="rotatey" center="-50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="-50" start="0" end="65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-795" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <include>genre_Showcase_2</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_2</include>
          </control>
        </control>
        <control type="group">
          <posx>150</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="50" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="50" start="0" end="65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-645" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <include>genre_Showcase_3</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_3</include>
          </control>
        </control>
        <control type="group">
          <posx>250</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="150" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="150" start="0" end="65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-495" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <include>genre_Showcase_4</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_4</include>
          </control>
        </control>
        <control type="group">
          <posx>350</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="250" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="250" start="0" end="65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-345" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <include>genre_Showcase_5</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_5</include>
          </control>
        </control>
        <control type="group">
          <posx>450</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="350" start="-65" end="-65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="350" start="0" end="65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-195" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <include>genre_Showcase_6</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_6</include>
          </control>
        </control>
        <control type="group">
          <posx>960</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1330" start="65" end="65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="1330" start="0" end="-65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="795" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <include>genre_Showcase_12</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_12</include>
          </control>
        </control>
        <control type="group">
          <posx>860</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1230" start="65" end="65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="1230" start="0" end="-65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="645" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <include>genre_Showcase_11</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_11</include>
          </control>
        </control>
        <control type="group">
          <posx>760</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1130" start="65" end="65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="1130" start="0" end="-65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="495" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <include>genre_Showcase_10</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_10</include>
          </control>
        </control>
        <control type="group">
          <posx>660</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1030" start="65" end="65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="1030" start="0" end="-65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="345" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <include>genre_Showcase_9</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include>genre_Showcase_ref_9</include>
          </control>
        </control>
        <control type="group">
          <posx>560</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="930" start="65" end="65" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)] | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="930" start="0" end="-65" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="195" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumb</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <include>genre_Showcase_8</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MusicShowcaseGlassOverlayAngledCD</include>
            </control>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCD</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <include>genre_Showcase_ref_8</include>
          </control>
        </control>
        <control type="group"><!--listitem(0)-->
          <visible>!IsEmpty(Container(57).ListItemNoWrap(0).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <posx>505</posx>
          <control type="group">
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlack</include>
            <control type="image">
              <include>MusicShowcaseThumbMain</include>
              <info>Container(57).ListItem(0).Thumb</info>
            </control>
            <include>genre_Showcase_7</include>
            <control type="image">
              <description>Glass overlay</description>
              <include>MusicShowcaseGlassOverlay</include>
            </control>
            <control type="image">
              <include>MusicShowcaseThumbReflection</include>
              <info>Container(57).ListItem(0).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MusicShowcaseThumbReflectionCDMain</include>
            </control>
            <include condition="Window.IsActive(pictures)">MusicShowcaseBlackReflection</include>
            <include>genre_Showcase_ref_7</include>
          </control>
        </control>
      </control>
    </control> 
    <control type="button" id="970">
      <texture>-</texture>
      <visible>![[!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)] | [Container.Content(episodes) + Skin.HasSetting(flattenshowcaseepisodes)]]</visible>
      <animation effect="fade" start="100" end="0" time="800">Hidden</animation>
    </control>
 </include>
  <include name="ShowcaseMovies">
    <control type="group">
      <control type="group" id="6001">
        <posy>450</posy>
        <camera x="640" y="590"/>
        <visible>Container.OnNext + ![[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]</visible>
        <animation effect="slide" end="-90,0" time="250" reversible="false">Hidden</animation>
        <control type="group">
          <posx>10</posx>
          <visible>Container.OnNext</visible>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-7).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
          <animation effect="rotatey" center="-90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-7).Thumb</info>
            </control>
            <include>genre_Showcase_15</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-7).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-7).Overlay)</visible>
              <visible>StringCompare(ListItem(-7).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-7).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_15</include>
          </control>
        </control>
        <control type="group">
          <posx>100</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-6).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-6).Thumb</info>
            </control>
            <include>genre_Showcase_1</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-6).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-6).Overlay)</visible>
              <visible>StringCompare(ListItem(-6).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-6).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_1</include>
          </control>
        </control>
        <control type="group">
          <posx>190</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <include>genre_Showcase_2</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-5).Overlay)</visible>
              <visible>StringCompare(ListItem(-5).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-5).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_2</include>
          </control>
        </control>
        <control type="group">
          <posx>280</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="180" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <include>genre_Showcase_3</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-4).Overlay)</visible>
              <visible>StringCompare(ListItem(-4).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-4).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_3</include>
          </control>
        </control>
        <control type="group">
          <posx>370</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <include>genre_Showcase_4</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-3).Overlay)</visible>
              <visible>StringCompare(ListItem(-3).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-3).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_4</include>
          </control>
        </control>
        <control type="group">
          <posx>460</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="360" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <include>genre_Showcase_5</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-2).Overlay)</visible>
              <visible>StringCompare(ListItem(-2).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-2).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_5</include>
          </control>
        </control>
        <control type="group">
          <posx>1180</posx>
          <visible>!Container.OnNext</visible>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(9).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(9).Thumb</info>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(9).Thumb</info>
            </control>
          </control>
        </control>
        <control type="group">
          <posx>1180</posx>
          <visible>!Container.OnNext</visible>
          <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(8).Thumb</info>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(8).Thumb</info>
            </control>
          </control>
        </control>
        <control type="group">
          <posx>1180</posx>
          <visible>!Container.OnNext</visible>
          <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(7).Thumb</info>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(7).Thumb</info>
            </control>
          </control>
        </control>
        <control type="group">
          <posx>1090</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(6).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <visible>!Container.OnNext</visible>
          <animation effect="fade" start="0" end="100" delay="0" time="250" reversible="false">Visible</animation>
          <animation effect="rotatey" center="1470" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(6).Thumb</info>
            </control>
            <include>genre_Showcase_13</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(6).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(6).Overlay)</visible>
              <visible>StringCompare(ListItem(6).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(6).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_13</include>
          </control>
        </control>
        <control type="group">
          <posx>1000</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1380" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <include>genre_Showcase_12</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(5).Overlay)</visible>
              <visible>StringCompare(ListItem(5).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(5).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_12</include>
          </control>
        </control>
        <control type="group">
          <posx>910</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <include>genre_Showcase_11</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(4).Overlay)</visible>
              <visible>StringCompare(ListItem(4).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(4).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_11</include>
          </control>
        </control>
        <control type="group">
          <posx>820</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1200" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <include>genre_Showcase_10</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(3).Overlay)</visible>
              <visible>StringCompare(ListItem(3).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(3).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_10</include>
          </control>
        </control>
        <control type="group">
          <posx>730</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1110" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <include>genre_Showcase_9</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(2).Overlay)</visible>
              <visible>StringCompare(ListItem(2).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(2).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_9</include>
          </control>
        </control>
        <control type="group">
          <posx>640</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1020" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <include>genre_Showcase_8</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(1).Overlay)</visible>
              <visible>StringCompare(ListItem(1).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(1).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_8</include>
          </control>
        </control>
        <control type="group">
          <visible>Container.OnNext</visible>
          <animation effect="slide" end="50,0" time="250" reversible="false">Hidden</animation>
          <control type="group">
            <posx>550</posx>
            <visible>Container.OnNext</visible>
            <animation effect="rotatey" center="930" start="0" end="-55" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
            <animation effect="rotatey" center="930" start="55" end="55" time="0" condition="true">Conditional</animation>
            <control type="group">
              <visible>!IsEmpty(Container(57).ListItemNoWrap(0).label) | !Skin.HasSetting(showcasefixedlist)</visible>
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
                <info>Container(57).ListItem(0).Thumb</info>
              </control>
              <include>genre_Showcase_7</include>
              <control type="image">
                <description>Glass overlay</description>
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
              </control>
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
                <info>Container(57).ListItem(0).Thumb</info>
              </control>
              <control type="image">
                <description>Glass overlay reflection</description>
                <include>MovieShowcaseThumbReflectionDVD</include>
              </control>
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
                <include>detailcolornofocus</include>
                <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(0).Overlay)</visible>
                <visible>StringCompare(ListItem(0).Overlay,OverlayWatched.png)</visible>
                <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(0).Overlay]</texture>
              </control>
              <include>genre_Showcase_ref_7</include>
            </control>
          </control>
          <control type="group">
            <posx>505</posx>
            <visible>Container.OnNext</visible>
            <visible>!IsEmpty(Container(57).ListItemNoWrap(-1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
            <animation effect="rotatey" center="405" start="0" end="-55" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
            <control type="group">
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
                <info>Container(57).ListItem(-1).Thumb</info>
              </control>
              <include>genre_Showcase_6</include>
              <control type="image">
                <description>Glass overlay</description>
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
              </control>
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
                <info>Container(57).ListItem(-1).Thumb</info>
              </control>
              <control type="image">
                <description>Glass overlay reflection</description>
                <include>MovieShowcaseThumbReflectionDVD</include>
              </control>
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
                <include>detailcolornofocus</include>
                <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-1).Overlay)</visible>
                <visible>StringCompare(ListItem(-1).Overlay,OverlayWatched.png)</visible>
                <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-1).Overlay]</texture>
              </control>
              <include>genre_Showcase_ref_6</include>
            </control>
          </control>
        </control>
      </control>
      <control type="group" id="6002">
        <posy>450</posy>
        <camera x="640" y="590"/>
        <visible>Container.OnPrevious + ![[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]</visible>
        <animation effect="slide" end="90,0" time="250" reversible="false">Hidden</animation>
        <control type="group">
          <posx>1000</posx>
          <visible>Container.OnPrevious</visible>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(7).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
          <animation effect="rotatey" center="1380" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(7).Thumb</info>
            </control>
            <include>genre_Showcase_14</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(7).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(7).Overlay)</visible>
              <visible>StringCompare(ListItem(7).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(7).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_14</include>
          </control>
        </control>
        <control type="group">
          <posx>910</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(6).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(6).Thumb</info>
            </control>
            <include>genre_Showcase_13</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(6).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(6).Overlay)</visible>
              <visible>StringCompare(ListItem(6).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(6).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_13</include>
          </control>
        </control>
        <control type="group">
          <posx>820</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1200" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <include>genre_Showcase_12</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(5).Overlay)</visible>
              <visible>StringCompare(ListItem(5).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(5).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_12</include>
          </control>
        </control>
        <control type="group">
          <posx>730</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1110" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <include>genre_Showcase_11</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(4).Overlay)</visible>
              <visible>StringCompare(ListItem(4).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(4).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_11</include>
          </control>
        </control>
        <control type="group">
          <posx>640</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1020" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <include>genre_Showcase_10</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(3).Overlay)</visible>
              <visible>StringCompare(ListItem(3).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(3).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_10</include>
          </control>
        </control>
        <control type="group">
          <posx>550</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="930" start="55" end="55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <include>genre_Showcase_9</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(2).Overlay)</visible>
              <visible>StringCompare(ListItem(2).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(2).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_9</include>
          </control>
        </control>
        <control type="group">
          <posx>-180</posx>
          <visible>!Container.OnPrevious</visible>
          <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-10).Thumb</info>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-10).Thumb</info>
            </control>
          </control>
        </control>
        <control type="group">
          <posx>-180</posx>
          <visible>!Container.OnPrevious</visible>
          <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-9).Thumb</info>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-9).Thumb</info>
            </control>
          </control>
        </control>
        <control type="group">
          <posx>-180</posx>
          <visible>!Container.OnPrevious</visible>
          <animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-8).Thumb</info>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-8).Thumb</info>
            </control>
          </control>
        </control>
        <control type="group">
          <posx>-80</posx>
          <visible>!Container.OnPrevious</visible>
          <animation effect="fade" start="0" end="100" time="250" reversible="false">Visible</animation>
          <animation effect="rotatey" center="-180" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-6).Thumb</info>
            </control>
            <include>genre_Showcase_1</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-6).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-6).Overlay)</visible>
              <visible>StringCompare(ListItem(-6).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-6).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_1</include>
          </control>
        </control>
        <control type="group">
          <posx>10</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="-90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <include>genre_Showcase_2</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-5).Overlay)</visible>
              <visible>StringCompare(ListItem(-5).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-5).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_2</include>
          </control>
        </control>
        <control type="group">
          <posx>100</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <include>genre_Showcase_3</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-4).Overlay)</visible>
              <visible>StringCompare(ListItem(-4).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-4).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_3</include>
          </control>
        </control>
        <control type="group">
          <posx>190</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <include>genre_Showcase_4</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-3).Overlay)</visible>
              <visible>StringCompare(ListItem(-3).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-3).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_4</include>
          </control>
        </control>
        <control type="group">
          <posx>280</posx>       
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="180" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <include>genre_Showcase_5</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-2).Overlay)</visible>
              <visible>StringCompare(ListItem(-2).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-2).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_5</include>
          </control>
        </control>
        <control type="group">
          <posx>370</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <include>genre_Showcase_6</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-1).Overlay)</visible>
              <visible>StringCompare(ListItem(-1).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-1).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_6</include>
          </control>
        </control>
        <control type="group">
          <visible>Container.OnPrevious</visible>
          <animation effect="slide" end="-50,0" time="250" reversible="false">Hidden</animation>
          <control type="group">
            <visible>!IsEmpty(Container(57).ListItemNoWrap(0).label) | !Skin.HasSetting(showcasefixedlist)</visible>
            <posx>460</posx>
            <visible>Container.OnPrevious</visible>
            <animation effect="rotatey" center="360" start="0" end="55" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
            <animation effect="rotatey" center="360" start="-55" end="-55" time="0" condition="true">Conditional</animation>
            <control type="group">
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
                <info>Container(57).ListItem(0).Thumb</info>
              </control>
              <include>genre_Showcase_7</include>
              <control type="image">
                <description>Glass overlay</description>
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlay</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayDVD</include>
              </control>
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
                <info>Container(57).ListItem(0).Thumb</info>
              </control>
              <control type="image">
                <description>Glass overlay reflection</description>
                <include>MovieShowcaseThumbReflectionDVD</include>
              </control>
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
                <include>detailcolornofocus</include>
                <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(0).Overlay)</visible>
                <visible>StringCompare(ListItem(0).Overlay,OverlayWatched.png)</visible>
                <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(0).Overlay]</texture>
              </control>
              <include>genre_Showcase_ref_7</include>
            </control>
          </control>
          <control type="group">
            <visible>!IsEmpty(Container(57).ListItemNoWrap(1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
            <posx>505</posx>
            <visible>Container.OnPrevious</visible>
            <animation effect="rotatey" center="885" start="0" end="55" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
            <control type="group">
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
                <info>Container(57).ListItem(1).Thumb</info>
              </control>
              <include>genre_Showcase_8</include>
              <control type="image">
                <description>Glass overlay</description>
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlay</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayDVD</include>
              </control>
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
                <info>Container(57).ListItem(1).Thumb</info>
              </control>
              <control type="image">
                <description>Glass overlay reflection</description>
                <include>MovieShowcaseThumbReflectionDVD</include>
              </control>
              <control type="image">
                <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
                <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
                <include>detailcolornofocus</include>
                <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(1).Overlay)</visible>
                <visible>StringCompare(ListItem(1).Overlay,OverlayWatched.png)</visible>
                <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(1).Overlay]</texture>
              </control>
              <include>genre_Showcase_ref_8</include>
            </control>
          </control>
        </control>
      </control>
      <control type="button" id="960">
        <texture>-</texture>
        <visible>![[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]</visible>
        <animation effect="fade" start="100" end="0" time="800">Hidden</animation>
      </control>
      <control type="group" id="6000">
        <posy>450</posy>
        <animation effect="fade" time="500">WindowOpen</animation>
        <animation effect="fade" time="200">WindowClose</animation>
        <visible>!Control.IsVisible(6001) + !Control.IsVisible(6002) + Control.IsVisible(960)</visible>
        <camera x="640" y="590"/>
        <control type="group">
          <!-- -6 -->
          <posx>10</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-6).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="-90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="-90" start="0" end="55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-685" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-6).Thumb</info>
            </control>
            <include>genre_Showcase_1</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-6).Thumb</info>
            </control>
            <include>genre_Showcase_ref_1</include>
          </control>
        </control>
        <control type="group">
          <posx>100</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="0" start="0" end="55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-577" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <include>genre_Showcase_2</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-5).Overlay)</visible>
              <visible>StringCompare(ListItem(-5).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-5).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_2</include>
          </control>
        </control>
        <control type="group">
          <posx>190</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="90" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="90" start="0" end="55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-469" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <include>genre_Showcase_3</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-4).Overlay)</visible>
              <visible>StringCompare(ListItem(-4).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-4).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_3</include>
          </control>
        </control>
        <control type="group">
          <posx>280</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="180" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="180" start="0" end="55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-362" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <include>genre_Showcase_4</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-3).Overlay)</visible>
              <visible>StringCompare(ListItem(-3).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-3).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_4</include>
          </control>
        </control>
        <control type="group">
          <posx>370</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="270" start="0" end="55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-256" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <include>genre_Showcase_5</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-2).Overlay)</visible>
              <visible>StringCompare(ListItem(-2).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-2).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_5</include>
          </control>
        </control>
        <control type="group">
          <!-- -1-->
          <posx>460</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(-1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="360" start="-55" end="-55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="360" start="0" end="55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="-151" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <include>genre_Showcase_6</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(-1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(-1).Overlay)</visible>
              <visible>StringCompare(ListItem(-1).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(-1).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_6</include>
          </control>
        </control>
        <control type="group">
          <!-- 6 -->
          <posx>1000</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(6).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1380" start="55" end="55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="1380" start="0" end="-55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="685" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(6).Thumb</info>
            </control>
            <include>genre_Showcase_13</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(6).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(6).Overlay)</visible>
              <visible>StringCompare(ListItem(6).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(6).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_13</include>
          </control>
        </control>
        <control type="group">
          <posx>910</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(5).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="1290" start="0" end="-55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="577" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <include>genre_Showcase_12</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(5).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(5).Overlay)</visible>
              <visible>StringCompare(ListItem(5).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(5).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_12</include>
          </control>
        </control>
        <control type="group">
          <posx>820</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(4).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1200" start="55" end="55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="1200" start="0" end="-55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="469" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <include>genre_Showcase_11</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(4).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(4).Overlay)</visible>
              <visible>StringCompare(ListItem(4).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(4).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_11</include>
          </control>
        </control>
        <control type="group">
          <posx>730</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(3).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1110" start="55" end="55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="1110" start="0" end="-55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="362" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <include>genre_Showcase_10</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(3).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(3).Overlay)</visible>
              <visible>StringCompare(ListItem(3).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(3).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_10</include>
          </control>
        </control>
        <control type="group">
          <posx>640</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(2).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="1020" start="55" end="55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="1020" start="0" end="-55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="256" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <include>genre_Showcase_9</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(2).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(2).Overlay)</visible>
              <visible>StringCompare(ListItem(2).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(2).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_9</include>
          </control>
        </control>
        <control type="group">
          <!-- 1 -->
          <posx>550</posx>
          <visible>!IsEmpty(Container(57).ListItemNoWrap(1).label) | !Skin.HasSetting(showcasefixedlist)</visible>
          <animation effect="rotatey" center="930" start="55" end="55" time="0" condition="true">Conditional</animation>
          <animation type="Conditional" condition="[[Skin.HasSetting(flattenshowcasemovies) + Skin.HasSetting(videomovies)] | [Skin.HasSetting(flattenshowcasetvshows) + Container.Content(tvshows)] | [Skin.HasSetting(flattenshowcaseseasons) + Container.Content(seasons)] |  Container.Content(episodes) | [!Window.IsActive(videolibrary) + !Window.IsActive(videofiles) + Skin.HasSetting(flattenshowcasemusic)]]">
            <effect type="rotatey" center="930" start="0" end="-55" time="800" tween="cubic" easing="inout"/>
            <effect type="slide" start="0" end="151" time="800" tween="cubic" easing="inout"/>
          </animation>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumb</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbDVD</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <include>genre_Showcase_8</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngled</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayAngledDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflection</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionDVDCover</include>
              <info>Container(57).ListItem(1).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <include>MovieShowcaseThumbReflectionDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(1).Overlay)</visible>
              <visible>StringCompare(ListItem(1).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(1).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_8</include>
          </control>
        </control>
        <control type="group">
          <posx>505</posx>
          <control type="group">
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbMain</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbMainDVD</include>
              <info>Container(57).ListItem(0).Thumb</info>
            </control>
            <include>genre_Showcase_7</include>
            <control type="image">
              <description>Glass overlay</description>
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlay</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseGlassOverlayDVD</include>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionMain</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">MovieShowcaseThumbReflectionMainDVD</include>
              <info>Container(57).ListItem(0).Thumb</info>
            </control>
            <control type="image">
              <description>Glass overlay reflection</description>
              <posx>49</posx>
              <posy>250</posy>
              <width>184</width>
              <height>120</height>
              <colordiffuse>52FFFFFF</colordiffuse>
              <bordertexture>thumbs/boxes/poster_shadow_reflect.png</bordertexture>
              <texture>thumbs/boxes/poster_glass_reflect.png</texture>
              <aspectratio scalediffuse="false">stretch</aspectratio>
              <visible>Skin.HasSetting(dvdcase_showcase)</visible>
            </control>
            <control type="image">
              <include condition="!Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseNormal</include>
              <include condition="Skin.HasSetting(dvdcase_showcase)">WatchedOverlayShowCaseDVD</include>
              <include>detailcolornofocus</include>
              <visible>!Skin.HasSetting(no_overlays) + !IsEmpty(ListItem(0).Overlay)</visible>
              <visible>StringCompare(ListItem(0).Overlay,OverlayWatched.png)</visible>
              <texture fallback="overlays/English/OverlayWatched.png">overlays/$INFO[System.Language]/$INFO[ListItem(0).Overlay]</texture>
            </control>
            <include>genre_Showcase_ref_7</include>
          </control>
        </control>
      </control>
    </control>
  </include>
  <include name="Viewtype_Showcase">
    <include condition="Skin.HasSetting(videomovies) + Window.IsActive(videolibrary)">ShowcaseInfoPaneMovies</include>
    <include condition="Skin.HasSetting(videotv) + Window.IsActive(videolibrary)">ShowcaseInfoPaneTV</include>
    <include condition="Window.IsActive(musiclibrary)">ShowcaseInfoPaneMusic</include>
    <control type="group">
      <visible>Control.IsVisible(57)</visible>
      <include>Animation_VisibleHiddenZoom</include>
      <visible>Window.IsActive(videoplaylist) | Window.IsActive(videofiles) | [Window.IsActive(videolibrary) + !Container.Content(episodes)] | Window.IsActive(programs)</visible>
      <include condition="Window.IsActive(programs) | Window.IsActive(videofiles) | Window.IsActive(videolibrary)">ShowcaseMovies</include>
      <include>Animation_HideShowcase</include>
    </control>
    <control type="group">
      <visible>Control.IsVisible(57)</visible>
      <include>Animation_VisibleHiddenZoom</include>
      <visible>Window.IsActive(scripts) | Window.IsActive(musiclibrary) | Window.IsActive(musicfiles) | Window.IsActive(musicplaylist) | Window.IsActive(pictures) | Container.Content(episodes)</visible>
      <include condition="Window.IsActive(pictures) | Window.IsActive(musicplaylist) | Window.IsActive(musicfiles) | Window.IsActive(musiclibrary) | Window.IsActive(videolibrary)">ShowcaseSquare</include>
      <include>Animation_HideShowcase</include>
    </control>
    <control type="button" id="70110">
      <texturefocus>-</texturefocus>
      <texturenofocus>-</texturenofocus>
      <onfocus>SetFocus(7000)</onfocus>
      <visible>[[Container.Content(movies) | Window.IsActive(videofiles)] + [[[Skin.HasSetting(infopanel_on_movies) | Skin.HasSetting(infopanel_auto_movies)] + IsEmpty(ListItem.Trailer)] | Skin.HasSetting(infopanel_off_movies)]] |
        [Container.Content(tvshows) + [Skin.HasSetting(infopanel_auto_tvshows) | Skin.HasSetting(infopanel_on_tvshows) | Skin.HasSetting(infopanel_off_tvshows)]] |
        [Container.Content(seasons) + [Skin.HasSetting(infopanel_auto_seasons) | Skin.HasSetting(infopanel_on_seasons) | Skin.HasSetting(infopanel_off_seasons)]] |
        [Container.Content(episodes) + [Skin.HasSetting(infopanel_auto_episodes) | Skin.HasSetting(infopanel_on_episodes) | Skin.HasSetting(infopanel_off_episodes)]] |
        [[Window.IsActive(musiclibrary) | Window.IsActive(musicfiles)] + !Skin.HasSetting(infopanel_trigger_music)] | Container.Content(genres) | Window.IsActive(pictures)
      </visible>
    </control>
    <control type="button" id="70110">
      <texturefocus>-</texturefocus>
      <texturenofocus>-</texturenofocus>
      <onleft>SetFocus(57)</onleft>
      <onright>SetFocus(57)</onright>
      <onup>SetFocus(7000)</onup>
      <ondown>SetFocus(57)</ondown>
      <onclick>PlayMedia($INFO[ListItem.Trailer],1,noresume)</onclick>
      <visible>![[[Container.Content(movies) | Window.IsActive(videofiles)] + [[[Skin.HasSetting(infopanel_on_movies) | Skin.HasSetting(infopanel_auto_movies)] + IsEmpty(ListItem.Trailer)] | Skin.HasSetting(infopanel_off_movies)]] |
        [Container.Content(tvshows) + [Skin.HasSetting(infopanel_auto_tvshows) | Skin.HasSetting(infopanel_on_tvshows) | Skin.HasSetting(infopanel_off_tvshows)]] |
        [Container.Content(seasons) + [Skin.HasSetting(infopanel_auto_seasons) | Skin.HasSetting(infopanel_on_seasons) | Skin.HasSetting(infopanel_off_seasons)]] |
        [Container.Content(episodes) + [Skin.HasSetting(infopanel_auto_episodes) | Skin.HasSetting(infopanel_on_episodes) | Skin.HasSetting(infopanel_off_episodes)]] |
        [[Window.IsActive(musiclibrary) | Window.IsActive(musicfiles) | Window.IsActive(pictures)] + !Skin.HasSetting(infopanel_trigger_music)] | Container.Content(genres) | Window.IsActive(pictures)]
      </visible>
    </control>
    <control type="group">
      <visible>Control.IsVisible(57)</visible>
      <include>Animation_VisibleHiddenZoom</include>
      <include condition="Skin.HasSetting(showcasefixedlist)">ShowcaseFixedList</include>
      <include condition="!Skin.HasSetting(showcasefixedlist)">ShowcaseWrapList</include>
      <control type="scrollbar" id="68">
        <posx>305</posx>
        <posy>670</posy>
        <width>670</width>
        <height>41</height>
        <visible allowhiddenfocus="true">Control.IsVisible(57) + Control.HasFocus(68)</visible>
        <texturesliderbackground border="14,0,14,0">windows/scrollBarH.png</texturesliderbackground>
        <texturesliderbar border="14,0,14,0">windows/scrollBarH_bar.png</texturesliderbar>
        <texturesliderbarfocus border="14,0,14,0">windows/scrollBarH_bar_focus.png</texturesliderbarfocus>
        <textureslidernib>windows/scrollBarNib.png</textureslidernib>
        <textureslidernibfocus>windows/scrollBarNib.png</textureslidernibfocus>
        <pulseonselect>true</pulseonselect>
        <orientation>horizontal</orientation>
        <showonepage>false</showonepage>
        <onup>57</onup>
        <ondown>70197</ondown>
        <onleft>68</onleft>
        <onright>68</onright>
        <include>Animation_HideShowcase</include>
        <include>Animation_CommonFade</include>
      </control>
      <control type="button" id="70197">
        <posx>0</posx>
        <posy>0</posy>
        <width>0</width>
        <height>0</height>
        <texturefocus>-</texturefocus>
        <texturenofocus>-</texturenofocus>
        <onleft>57</onleft>
        <onright>57</onright>
        <onup>57</onup>
        <ondown>57</ondown>
      </control>
      <include>Furniture_FloorText</include>
    </control>
  </include>
</includes>
